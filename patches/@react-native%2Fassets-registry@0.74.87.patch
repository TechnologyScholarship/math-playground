diff --git a/node_modules/@react-native/assets-registry/.17fbd39a78ffcbfc-00000004.README.md b/.17fbd39a78ffcbfc-00000004.README.md
new file mode 100644
index 0000000000000000000000000000000000000000..407cc5b53de5fdbc9919d2754a52b8ad81929b41
--- /dev/null
+++ b/.17fbd39a78ffcbfc-00000004.README.md
@@ -0,0 +1,21 @@
+# @react-native/assets-registry
+
+[![Version][version-badge]][package]
+
+## Installation
+
+```
+yarn add --dev @react-native/assets-registry
+```
+
+*Note: We're using `yarn` to install deps. Feel free to change commands to use `npm` 3+ and `npx` if you like*
+
+[version-badge]: https://img.shields.io/npm/v/@react-native/assets-registry?style=flat-square
+[package]: https://www.npmjs.com/package/@react-native/assets-registry
+
+## Testing
+
+To run the tests in this package, run the following commands from the React Native root folder:
+
+1. `yarn` to install the dependencies. You just need to run this once
+2. `yarn jest packages/assets`.
diff --git a/node_modules/@react-native/assets-registry/.1febb7b7fb732790-00000005.registry.js b/.1febb7b7fb732790-00000005.registry.js
new file mode 100644
index 0000000000000000000000000000000000000000..c8a72efc66e801b3cda600a83ebd66fa912adaf9
--- /dev/null
+++ b/.1febb7b7fb732790-00000005.registry.js
@@ -0,0 +1,44 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+'use strict';
+
+// I don't know why this is fucked but this was fucked
+// but hey as long as it owrks now, right?
+
+export type PackagerAsset = {
+  +__packager_asset: boolean,
+  +fileSystemLocation: string,
+  +httpServerLocation: string,
+  +width: ?number,
+  +height: ?number,
+  +scales: Array<number>,
+  +hash: string,
+  +name: string,
+  +type: string,
+  ...
+};
+
+const assets: Array<PackagerAsset> = [];
+// const assets = [];
+
+function registerAsset(asset: PackagerAsset): number {
+// function registerAsset(asset) {
+  // `push` returns new array length, so the first asset will
+  // get id 1 (not 0) to make the value truthy
+  return assets.push(asset);
+}
+
+function getAssetByID(assetId: number): PackagerAsset {
+// function getAssetByID(assetId) {
+  return assets[assetId - 1];
+}
+
+module.exports = {registerAsset, getAssetByID};
diff --git a/node_modules/@react-native/assets-registry/.9ffb9ffbfe7f1f7d-00000004.README.md b/.9ffb9ffbfe7f1f7d-00000004.README.md
new file mode 100644
index 0000000000000000000000000000000000000000..407cc5b53de5fdbc9919d2754a52b8ad81929b41
--- /dev/null
+++ b/.9ffb9ffbfe7f1f7d-00000004.README.md
@@ -0,0 +1,21 @@
+# @react-native/assets-registry
+
+[![Version][version-badge]][package]
+
+## Installation
+
+```
+yarn add --dev @react-native/assets-registry
+```
+
+*Note: We're using `yarn` to install deps. Feel free to change commands to use `npm` 3+ and `npx` if you like*
+
+[version-badge]: https://img.shields.io/npm/v/@react-native/assets-registry?style=flat-square
+[package]: https://www.npmjs.com/package/@react-native/assets-registry
+
+## Testing
+
+To run the tests in this package, run the following commands from the React Native root folder:
+
+1. `yarn` to install the dependencies. You just need to run this once
+2. `yarn jest packages/assets`.
diff --git a/node_modules/@react-native/assets-registry/.9fff936debd77fff-00000002.package.json b/.9fff936debd77fff-00000002.package.json
new file mode 100644
index 0000000000000000000000000000000000000000..d81a96c750fc2a4c16687d5479baf1bfe06726da
--- /dev/null
+++ b/.9fff936debd77fff-00000002.package.json
@@ -0,0 +1,22 @@
+{
+  "name": "@react-native/assets-registry",
+  "version": "0.74.87",
+  "description": "Asset support code for React Native.",
+  "license": "MIT",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/facebook/react-native.git",
+    "directory": "packages/assets"
+  },
+  "homepage": "https://github.com/facebook/react-native/tree/HEAD/packages/assets#readme",
+  "keywords": [
+    "assets",
+    "registry",
+    "react-native",
+    "support"
+  ],
+  "bugs": "https://github.com/facebook/react-native/issues",
+  "engines": {
+    "node": ">=18"
+  }
+}
diff --git a/node_modules/@react-native/assets-registry/.b7ef97f7fc12ff7a-00000003.path-support.js b/.b7ef97f7fc12ff7a-00000003.path-support.js
new file mode 100644
index 0000000000000000000000000000000000000000..f0a85af33ff98d3d6d8a9c279378eb2676af160a
--- /dev/null
+++ b/.b7ef97f7fc12ff7a-00000003.path-support.js
@@ -0,0 +1,92 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict
+ */
+
+'use strict';
+
+import type {PackagerAsset} from './registry.js';
+
+const androidScaleSuffix = {
+  '0.75': 'ldpi',
+  '1': 'mdpi',
+  '1.5': 'hdpi',
+  '2': 'xhdpi',
+  '3': 'xxhdpi',
+  '4': 'xxxhdpi',
+};
+
+const ANDROID_BASE_DENSITY = 160;
+
+/**
+ * FIXME: using number to represent discrete scale numbers is fragile in essence because of
+ * floating point numbers imprecision.
+ */
+function getAndroidAssetSuffix(scale: number): string {
+  if (scale.toString() in androidScaleSuffix) {
+    return androidScaleSuffix[scale.toString()];
+  }
+  // NOTE: Android Gradle Plugin does not fully support the nnndpi format.
+  // See https://issuetracker.google.com/issues/72884435
+  if (Number.isFinite(scale) && scale > 0) {
+    return Math.round(scale * ANDROID_BASE_DENSITY) + 'dpi';
+  }
+  throw new Error('no such scale ' + scale.toString());
+}
+
+// See https://developer.android.com/guide/topics/resources/drawable-resource.html
+const drawableFileTypes = new Set([
+  'gif',
+  'jpeg',
+  'jpg',
+  'ktx',
+  'png',
+  'svg',
+  'webp',
+  'xml',
+]);
+
+function getAndroidResourceFolderName(
+  asset: PackagerAsset,
+  scale: number,
+): string | $TEMPORARY$string<'raw'> {
+  if (!drawableFileTypes.has(asset.type)) {
+    return 'raw';
+  }
+  const suffix = getAndroidAssetSuffix(scale);
+  if (!suffix) {
+    throw new Error(
+      "Don't know which android drawable suffix to use for scale: " +
+        scale +
+        '\nAsset: ' +
+        JSON.stringify(asset, null, '\t') +
+        '\nPossible scales are:' +
+        JSON.stringify(androidScaleSuffix, null, '\t'),
+    );
+  }
+  return 'drawable-' + suffix;
+}
+
+function getAndroidResourceIdentifier(asset: PackagerAsset): string {
+  return (getBasePath(asset) + '/' + asset.name)
+    .toLowerCase()
+    .replace(/\//g, '_') // Encode folder structure in file name
+    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars
+    .replace(/^assets_/, ''); // Remove "assets_" prefix
+}
+
+function getBasePath(asset: PackagerAsset): string {
+  const basePath = asset.httpServerLocation;
+  return basePath.startsWith('/') ? basePath.slice(1) : basePath;
+}
+
+module.exports = {
+  getAndroidResourceFolderName,
+  getAndroidResourceIdentifier,
+  getBasePath,
+};
diff --git a/node_modules/@react-native/assets-registry/.d7ebbfedafb3f6fe-00000005.registry.js b/.d7ebbfedafb3f6fe-00000005.registry.js
new file mode 100644
index 0000000000000000000000000000000000000000..02470da3c4962ad1bbdc62d9ed295c19ca4905fe
--- /dev/null
+++ b/.d7ebbfedafb3f6fe-00000005.registry.js
@@ -0,0 +1,38 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+'use strict';
+
+export type PackagerAsset = {
+  +__packager_asset: boolean,
+  +fileSystemLocation: string,
+  +httpServerLocation: string,
+  +width: ?number,
+  +height: ?number,
+  +scales: Array<number>,
+  +hash: string,
+  +name: string,
+  +type: string,
+  ...
+};
+
+const assets: Array<PackagerAsset> = [];
+
+function registerAsset(asset: PackagerAsset): number {
+  // `push` returns new array length, so the first asset will
+  // get id 1 (not 0) to make the value truthy
+  return assets.push(asset);
+}
+
+function getAssetByID(assetId: number): PackagerAsset {
+  return assets[assetId - 1];
+}
+
+module.exports = {registerAsset, getAssetByID};
diff --git a/node_modules/@react-native/assets-registry/.f7eff7efedffe2c8-00000003.path-support.js b/.f7eff7efedffe2c8-00000003.path-support.js
new file mode 100644
index 0000000000000000000000000000000000000000..f0a85af33ff98d3d6d8a9c279378eb2676af160a
--- /dev/null
+++ b/.f7eff7efedffe2c8-00000003.path-support.js
@@ -0,0 +1,92 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict
+ */
+
+'use strict';
+
+import type {PackagerAsset} from './registry.js';
+
+const androidScaleSuffix = {
+  '0.75': 'ldpi',
+  '1': 'mdpi',
+  '1.5': 'hdpi',
+  '2': 'xhdpi',
+  '3': 'xxhdpi',
+  '4': 'xxxhdpi',
+};
+
+const ANDROID_BASE_DENSITY = 160;
+
+/**
+ * FIXME: using number to represent discrete scale numbers is fragile in essence because of
+ * floating point numbers imprecision.
+ */
+function getAndroidAssetSuffix(scale: number): string {
+  if (scale.toString() in androidScaleSuffix) {
+    return androidScaleSuffix[scale.toString()];
+  }
+  // NOTE: Android Gradle Plugin does not fully support the nnndpi format.
+  // See https://issuetracker.google.com/issues/72884435
+  if (Number.isFinite(scale) && scale > 0) {
+    return Math.round(scale * ANDROID_BASE_DENSITY) + 'dpi';
+  }
+  throw new Error('no such scale ' + scale.toString());
+}
+
+// See https://developer.android.com/guide/topics/resources/drawable-resource.html
+const drawableFileTypes = new Set([
+  'gif',
+  'jpeg',
+  'jpg',
+  'ktx',
+  'png',
+  'svg',
+  'webp',
+  'xml',
+]);
+
+function getAndroidResourceFolderName(
+  asset: PackagerAsset,
+  scale: number,
+): string | $TEMPORARY$string<'raw'> {
+  if (!drawableFileTypes.has(asset.type)) {
+    return 'raw';
+  }
+  const suffix = getAndroidAssetSuffix(scale);
+  if (!suffix) {
+    throw new Error(
+      "Don't know which android drawable suffix to use for scale: " +
+        scale +
+        '\nAsset: ' +
+        JSON.stringify(asset, null, '\t') +
+        '\nPossible scales are:' +
+        JSON.stringify(androidScaleSuffix, null, '\t'),
+    );
+  }
+  return 'drawable-' + suffix;
+}
+
+function getAndroidResourceIdentifier(asset: PackagerAsset): string {
+  return (getBasePath(asset) + '/' + asset.name)
+    .toLowerCase()
+    .replace(/\//g, '_') // Encode folder structure in file name
+    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars
+    .replace(/^assets_/, ''); // Remove "assets_" prefix
+}
+
+function getBasePath(asset: PackagerAsset): string {
+  const basePath = asset.httpServerLocation;
+  return basePath.startsWith('/') ? basePath.slice(1) : basePath;
+}
+
+module.exports = {
+  getAndroidResourceFolderName,
+  getAndroidResourceIdentifier,
+  getBasePath,
+};
diff --git a/node_modules/@react-native/assets-registry/.ffebdbff7dfadfef-00000002.package.json b/.ffebdbff7dfadfef-00000002.package.json
new file mode 100644
index 0000000000000000000000000000000000000000..d81a96c750fc2a4c16687d5479baf1bfe06726da
--- /dev/null
+++ b/.ffebdbff7dfadfef-00000002.package.json
@@ -0,0 +1,22 @@
+{
+  "name": "@react-native/assets-registry",
+  "version": "0.74.87",
+  "description": "Asset support code for React Native.",
+  "license": "MIT",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/facebook/react-native.git",
+    "directory": "packages/assets"
+  },
+  "homepage": "https://github.com/facebook/react-native/tree/HEAD/packages/assets#readme",
+  "keywords": [
+    "assets",
+    "registry",
+    "react-native",
+    "support"
+  ],
+  "bugs": "https://github.com/facebook/react-native/issues",
+  "engines": {
+    "node": ">=18"
+  }
+}
diff --git a/registry.js b/registry.js
index 02470da3c4962ad1bbdc62d9ed295c19ca4905fe..8e9aa5150be14db5fcaf0100a6cf75cb2fee45f9 100644
--- a/registry.js
+++ b/registry.js
@@ -10,28 +10,31 @@
 
 'use strict';
 
-export type PackagerAsset = {
-  +__packager_asset: boolean,
-  +fileSystemLocation: string,
-  +httpServerLocation: string,
-  +width: ?number,
-  +height: ?number,
-  +scales: Array<number>,
-  +hash: string,
-  +name: string,
-  +type: string,
-  ...
-};
+// export type PackagerAsset = {
+//   +__packager_asset: boolean,
+//   +fileSystemLocation: string,
+//   +httpServerLocation: string,
+//   +width: ?number,
+//   +height: ?number,
+//   +scales: Array<number>,
+//   +hash: string,
+//   +name: string,
+//   +type: string,
+//   ...
+// };
 
-const assets: Array<PackagerAsset> = [];
+// const assets: Array<PackagerAsset> = [];
+const assets = [];
 
-function registerAsset(asset: PackagerAsset): number {
+// function registerAsset(asset: PackagerAsset): number {
+function registerAsset(asset) {
   // `push` returns new array length, so the first asset will
   // get id 1 (not 0) to make the value truthy
   return assets.push(asset);
 }
 
-function getAssetByID(assetId: number): PackagerAsset {
+// function getAssetByID(assetId: number): PackagerAsset {
+function getAssetByID(assetId) {
   return assets[assetId - 1];
 }
 
